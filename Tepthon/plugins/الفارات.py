# Tepthon
# Copyright (C) 2022 TepthonArabic. All Rights Reserved
#
# This file is a part of < https://github.com/TepthonArabic/TepthonAr/ >
# PLease read the GNU Affero General Public License in
# <https://www.github.com/TepthonArabic/TepthonAr/blob/master/LICENSE/>.

""" ูุตูู ุงููููู : ุฃูุงููุฑ ุงุถูุงูุฉ ุงูููุงุฑุงุช ุจุงููุบูุฉ ุงูุนุฑุจููุฉ ููุงููุฉ ููุง ุญูุฑู ุงููููุด๐ค ุชุฎููุท ุงุฐููุฑ ุงููุตูุฏุฑ ููููุฏ
ุงุถูุงูุฉ ููุงุฑุงุช ุตููุฑุฉ ( ุงูุญูุงููุฉ - ุงููุญูุต - ุงูููุชูู ) ุจู ุงููุฑ ูุงุญูุฏ ูููุท
ุญูููู ููุชูุงุฑูุฎ : @Tepthon
@E_7_V - ูุชูุงุจูุฉ ุงููููู: ุฑูุฌููุฑ"""
# ุจููุงูููุฑ ููููุฏ ูููููููููููููููููููููููููู
import asyncio
import math
import os

import heroku3
import requests
import urllib3
import random
import string
from datetime import datetime

from PIL import Image
from telegraph import Telegraph, exceptions, upload_file
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
from telethon.tl.functions.users import GetFullUserRequest
from telethon.tl.types import MessageEntityMentionName
from telethon.utils import get_display_name
from urlextract import URLExtract

from Tepthon import zedub

from ..Config import Config
from ..core.logger import logging
from ..core.managers import edit_delete, edit_or_reply
from ..helpers.functions import delete_conv
from ..sql_helper.globals import addgvar, delgvar, gvarstatus

Heroku = heroku3.from_key(Config.HEROKU_API_KEY)
heroku_api = "https://api.heroku.com"
HEROKU_APP_NAME = Config.HEROKU_APP_NAME
HEROKU_API_KEY = Config.HEROKU_API_KEY
from . import BOTLOG_CHATID, mention


plugin_category = "ุงูุงุฏูุงุช"
LOGS = logging.getLogger(__name__)

extractor = URLExtract()
telegraph = Telegraph()
r = telegraph.create_account(short_name=Config.TELEGRAPH_SHORT_NAME)
auth_url = r["auth_url"]


def resize_image(image):
    im = Image.open(image)
    im.save(image, "PNG")


Baqir_vars_cmd = (
    "๐ฉ [๐ฆ๐ผ๐๐ฟ๐ฐ๐ฒ ๐ง๐ฒ๐ฝ๐๐ต๐ผ๐ป ๐๐ผ๐ป๐ณ๐ถ๐ด ๐ฉ๐ฎ๐ฟ๐ - ุฃูุงููุฑ ุงูููุงุฑุงุช](t.me/Tepthon) ๐ช\n\n"
    "**โโูุงุฆููุฉ ุงูุงูุฑ ุชุบูููุฑ ููุงุฑุงุช ุงูุตููุฑ ุจุฃููุฑ ูุงุญูุฏ ูููุท - ูู ุฃูู ููุฑุฉ ุน ุณููุฑุณ ุชูุจุซููู ููุฒุฑ ุจููุช ๐ฆพ :** \n\n"
    "โชผ `.ุงุถู ุตูุฑุฉ ุงูุญูุงูุฉ` ุจุงููุฑุฏ ุน ุตููุฑุฉ ุงู ููุฏููุง\n\n"
    "โชผ `.ุงุถู ุตูุฑุฉ ุงููุญุต` ุจุงููุฑุฏ ุน ุตููุฑุฉ ุงู ููุฏููุง\n\n"
    "โชผ `.ุงุถู ุตูุฑุฉ ุงูููุชู` ุจุงููุฑุฏ ุน ุตููุฑุฉ ุงู ููุฏููุง\n\n"
    "โชผ `.ุงุถู ุตูุฑุฉ ุงูุงูุงูุฑ` ุจุงููุฑุฏ ุน ุตููุฑุฉ ุงู ููุฏููุง\n\n"
    "โชผ `.ุงุถู ุตูุฑุฉ ุงูุณูุฑุณ` ุจุงููุฑุฏ ุน ุตููุฑุฉ ุงู ููุฏููุง\n\n"
    "โชผ `.ุงุถู ุตูุฑุฉ ุงููุชู` ุจุงููุฑุฏ ุน ุตููุฑุฉ ุงู ููุฏููุง\n\n"
    "โชผ `.ุงุถู ูุงุฑ ุตูุฑุฉ ุงูุจูุช` ุจุงููุฑุฏ ุน ุตููุฑุฉ ุงู ููุฏููุง ูู ุงุถูุงูุฉ ุตููุฑุฉ ุณุชูุงุฑุช ููุจููุช\n\n"
    "โชผ `.ุงูุงูุฑ ุงููุงุฑุงุช` ูุนูุฑุถ ุจูููุฉ ุฃูุงููุฑ ุงูููุงุฑุงุช\n\n\n"
    "**โโูุงุฆููุฉ ุงูุงูุฑ ุชุบูููุฑ ูููุดูุฉ ุงูุงููุฏู :** \n\n"
    "โชผ `.ุงุถู ุงูููุฌู ุงูุงูุฏู` ุจุงููุฑุฏ ุน ุงูุฑููุฒ ุงู ุงูุงูููุฌูู\n\n"
    "โชผ `.ุงุถู ุนููุงู ุงูุงูุฏู` ุจุงููุฑุฏ ุน ููุต ุงูุนูููุงู\n\n"
    "โชผ `.ุงุถู ุฎุท ุงูุงูุฏู` ุจุงููุฑุฏ ุน ุงูุฎูุท ุงู ุงููุณุชูููู\n\n\n"
    "**โโูุงุฆููุฉ ุงูุงูุฑ ุชุบูููุฑ ุจูููุฉ ุงูููุงุฑุงุช ุจุฃููุฑ ูุงุญูุฏ ูููุท :** \n\n"
    "โชผ `.ุงุถู ูููุดุฉ ุงูุญูุงูุฉ` ุจุงููุฑุฏ ุน ุงููููุดูุฉ\n\n"
    "โชผ `.ุงุถู ูููุดุฉ ุงููุญุต` ุจุงููุฑุฏ ุน ุงููููุดูุฉ\n\n"
    "โชผ `.ุงุถู ูููุดุฉ ุงูุญุธุฑ` ุจุงููุฑุฏ ุน ุงููููุดูุฉ\n\n"
    "โชผ `.ุงุถู ูููุดุฉ ุงูุจูุช` ุจุงููุฑุฏ ุน ุงููููุดูุฉ ูู ุงุถูุงูุฉ ูููุดูุฉ ุณุชูุงุฑุช\n\n"
    "โชผ `.ุงุถู ุฑูุฒ ุงูููุชู` ุจุงููุฑุฏ ุน ุฑููุฒ\n\n"
    "โชผ `.ุงุถู ูุงุฑ ุฒุฎุฑูุฉ ุงูููุชู` ุจุงููุฑุฏ ุน ุงุฑููุงู ุงูุฒุบูุฑูู\n\n"
    "โชผ `.ุงุถู ุงูุจุงูู ุงูููุชู` ุจุงููุฑุฏ ุน ุงูุจูุงููู\n\n"
    "โชผ `.ุงุถู ุงุณู ุงููุณุชุฎุฏู` ุจุงููุฑุฏ ุน ุงุณูู\n\n"
    "โชผ `.ุงุถู ูุฑูุจ ุงูุฑุณุงุฆู` ุจุงููุฑุฏ ุน ุงูุฏู ุงูููุฑูุจ\n\n"
    "โชผ `.ุงุถู ูุฑูุจ ุงูุณุฌู` ุจุงููุฑุฏ ุน ุงูุฏู ุงูููุฑูุจ\n\n"
    "โชผ `.ุงุถู ุงูุฏูู` ุจุงููุฑุฏ ุน ุงูุฏู ุญุณูุงุจู\n\n"
    "โชผ `.ุงุถู ููุทุฉ ุงูุงูุงูุฑ` ุจุงููุฑุฏ ุน ุงููุฑูุฒ ุงูุฌุฏููุฏ\n\n"
    "โชผ `.ุงุถู ููู ุงูุชุฑุญูุจ` ุจุงููุฑุฏ ุน ุฑููู ุงูุณุงุนุฉ ูุจุฏุงูุฉ ููู ุงูุชุฑุญูุจ ุงููุคูุช\n\n"
    "โชผ `.ุงุถู ุฑุณุงุฆู ุงูุญูุงูุฉ` ุจุงููุฑุฏ ุน ุฑููู ูุนุฏุฏ ุฑุณุงุฆู ุชุญุฐููุฑุงุช ุญูุงูุฉ ุงูุฎุงุต\n\n\n"
    "โชผ `.ุฌูุจ` + ุงุณูู ุงูููุงุฑ\n\n"
    "โชผ `.ุญุฐู` + ุงุณูู ุงูููุงุฑ\n\n"
    "โชผ `.ุฑูุน ูุทูุฑ` ุจุงููุฑุฏ ุน ุงูุดุฎูุต ูุฑูุนูู ูุทููุฑ ุชุญููู ูุงููู ุจุงูุฃูุงููุฑ\n\n"
    "โชผ `.ุญุฐู ูุงุฑ ุงููุทูุฑูู`\n\n"
    "\n๐ฉ [๐ง๐ฒ๐ฝ๐๐ต๐ผ๐ป ๐๐๐ง๐จ - ูููุงุฉ ุงูููุงุฑุงุช](t.me/Tepthone1) ๐ช"
)


# Copyright (C) 2022 TepthonArabic . All Rights Reserved
@zedub.zed_cmd(pattern=r"ุงุถู (.*)")
async def variable(event):
    input_str = event.pattern_match.group(1)
    reply = await event.get_reply_message()
    vinfo = reply.text
    zed = await edit_or_reply(event, "**โโุฌูุงุฑู ุงุถูุงูุฉ ุงูููุงุฑ ุงููู ุจููุชู ...**")
    # All Rights Reserved for "Tepthon" "ูุญููุฏ"
    if input_str == "ูููุดุฉ ุงููุญุต" or input_str == "ูููุดู ุงููุญุต":
        variable = "ALIVE_TEMPLATE"
        await asyncio.sleep(1.5)
        if gvarstatus("ALIVE_TEMPLATE") is None:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงููููุดูุฉ ุงูุฌูุฏูุฏู** \n {} \n\n**โโุงูุขู ููู ุจู ุงุฑุณูุงู ุงูุงููุฑ โถ** `.ูุญุต` **ูู ุงูุชุญููู ููู ุงููููุดูุฉ . .**".format(input_str, vinfo))
        else:
            await zed.edit("**โโุชู ุงุถูุงููุฉ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงููููุดูุฉ ุงููุถูุงูู** \n {} \n\n**โโุงูุขู ููู ุจู ุงุฑุณูุงู ุงูุงููุฑ โถ** `.ูุญุต` **ูู ุงูุชุญููู ููู ุงููููุดูุฉ . .**".format(input_str, vinfo))
        addgvar("ALIVE_TEMPLATE", vinfo)
    elif input_str == "ูููุดุฉ ุงูุญูุงูุฉ" or input_str == "ูููุดู ุงูุญูุงูู" or input_str == "ูููุดู ุงูุญูุงูุฉ" or input_str == "ูููุดุฉ ุงูุญูุงูู":
        variable = "pmpermit_txt"
        await asyncio.sleep(1.5)
        if gvarstatus("pmpermit_txt") is None:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงููููุดูุฉ ุงูุฌูุฏูุฏู** \n {} \n\n**โโุงูุขู ููู ุจู ุงุฑุณูุงู ุงูุงููุฑ โถ** `.ุงูุญูุงูู ุชูุนูู` **ูู ุงูุชุญููู ููู ุงููููุดูุฉ . .**".format(input_str, vinfo))
        else:
            await zed.edit("**โโุชู ุงุถูุงููุฉ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงููููุดูุฉ ุงููุถูุงูู** \n {} \n\n**โโุงูุขู ููู ุจู ุงุฑุณูุงู ุงูุงููุฑ โถ** `.ุงูุญูุงูู ุชูุนูู` **ูู ุงูุชุญููู ููู ุงููููุดูุฉ . .**".format(input_str, vinfo))
        addgvar("pmpermit_txt", vinfo)
    elif input_str == "ูููุดุฉ ุงูุจูุช" or input_str == "ูููุดู ุงูุจูุช":
        variable = "START_TEXT"
        await asyncio.sleep(1.5)
        if gvarstatus("START_TEXT") is None:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงููููุดูุฉ ุงูุฌูุฏูุฏู** \n {} \n\n**โโุงูุขู ููู ุจู ุงูุฐููุงุจ ูุจูุชู ุงููุณูุงุนุฏ ูู ุญุณุงุจ ุขุฎุฑ โถ** ูุฏุฒ ุณุชุงุฑุช **ูู ุงูุชุญููู ููู ุงููููุดูุฉ . .**".format(input_str, vinfo))
        else:
            await zed.edit("**โโุชู ุงุถูุงููุฉ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงููููุดูุฉ ุงููุถูุงูู** \n {} \n\n**โโุงูุขู ููู ุจู ุงูุฐููุงุจ ูุจูุชู ุงููุณูุงุนุฏ ูู ุญุณุงุจ ุขุฎุฑ โถ** ูุฏุฒ ุณุชุงุฑุช **ูู ุงูุชุญููู ููู ุงููููุดูุฉ . .**".format(input_str, vinfo))
        addgvar("START_TEXT", vinfo)
    elif input_str == "ูููุดุฉ ุงูุญุธุฑ" or input_str == "ูููุดู ุงูุญุธุฑ":
        variable = "pmblock"
        await asyncio.sleep(1.5)
        if gvarstatus("pmblock") is None:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงููููุดูุฉ ุงูุฌูุฏูุฏู** \n {} \n\n**โโุงูุขู ููู ุจู ุงูุฐููุงุจ ูุจูุชู ุงููุณูุงุนุฏ ูู ุญุณุงุจ ุขุฎุฑ โถ** ูุฏุฒ ุณุชุงุฑุช **ูู ุงูุชุญููู ููู ุงููููุดูุฉ . .**".format(input_str, vinfo))
        else:
            await zed.edit("**โโุชู ุงุถูุงููุฉ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงููููุดูุฉ ุงููุถูุงูู** \n {} \n\n**โโุงูุขู ููู ุจู ุงูุฐููุงุจ ูุจูุชู ุงููุณูุงุนุฏ ูู ุญุณุงุจ ุขุฎุฑ โถ** ูุฏุฒ ุณุชุงุฑุช **ูู ุงูุชุญููู ููู ุงููููุดูุฉ . .**".format(input_str, vinfo))
        addgvar("pmblock", vinfo)
    elif input_str == "ุฑูุฒ ุงูููุชู" or input_str == "ุฑูุฒ ุงูุงุณู ุงูููุชู":
        variable = "CUSTOM_ALIVE_EMZED"
        await asyncio.sleep(1.5)
        if gvarstatus("CUSTOM_ALIVE_EMZED") is None:
            addgvar(variable, vinfo)
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงููุฑููุฒ ุงูุฌูุฏููุฏ** \n {} \n\n**โโุงูุขู ููู ุจู ุงุฑุณูุงู ุงูุงููุฑ โถ** `.ุงูุงุณู ุชููุงุฆู` **ูู ุงูุชุญููู ููู ุงููุฑูุฒ . .**".format(input_str, vinfo))
        else:
            addgvar(variable, vinfo)
            await zed.edit("**โโุชู ุงุถูุงููุฉ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงููุฑููุฒ ุงููุถูุงู** \n {} \n\n**โโุงูุขู ููู ุจู ุงุฑุณูุงู ุงูุงููุฑ โถ** `.ุงูุงุณู ุชููุงุฆู` **ูู ุงูุชุญููู ููู ุงููุฑูุฒ . .**".format(input_str, vinfo))
    elif input_str == "ุงูุจุงูู" or input_str == "ุงูุจุงูู ุงูููุชู" or input_str == "ุงููุจุฐู" or input_str == "ุงูุจุงูู ุชููุงุฆู":
        variable = "DEFAULT_BIO"
        await asyncio.sleep(1.5)
        if gvarstatus("DEFAULT_BIO") is None:
            addgvar(variable, vinfo)
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงูุจูุงููู ุงูุฌูุฏููุฏ** \n {} \n\n**โโุงูุขู ููู ุจู ุงุฑุณูุงู ุงูุงููุฑ โถ** `.ุงูุจุงูู ุชููุงุฆู` **ูู ุงูุชุญููู ููู ุงูุจุงููู . .**".format(input_str, vinfo))
        else:
            addgvar(variable, vinfo)
            await zed.edit("**โโุชู ุงุถูุงูู {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงูุจูุงููู ุงููุถูุงู** \n {} \n\n**โโุงูุขู ููู ุจู ุงุฑุณูุงู ุงูุงููุฑ โถ** `.ุงูุจุงูู ุชููุงุฆู` **ูู ุงูุชุญููู ููู ุงูุจุงููู . .**".format(input_str, vinfo))
    elif input_str == "ุงูุชุญูู" or input_str == "ููุฏ ุงูุชุญูู" or input_str == "ุงูุชุญูู ุจุฎุทูุชูู" or input_str == "ุชุญูู":
        variable = "TG_2STEP_VERIFICATION_CODE"
        await asyncio.sleep(1.5)
        if gvarstatus("TG_2STEP_VERIFICATION_CODE") is None:
            addgvar(variable, vinfo)
            await zed.edit("**โโุชู ุฅุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ**\n**โโูููุฏ ุงูุชุญููู ุจุฎุทููุชููู** \n {} \n\n**โโุงูุขู ููู ุจู ุงุฑุณูุงู ุงูุงููุฑ โถ** `.ุชุญููู ููููุฉ` **ุซู ูุนูุฑู ุงูุดุฎูุต ุฏุงุฎูู ุงูููุฑูุจ ุงู ุงููููุงุฉ . .**".format(input_str, vinfo))
        else:
            addgvar(variable, vinfo)
            await zed.edit("**โโุชู ุฅุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ**\n**โโูููุฏ ุงูุชุญููู ุจุฎุทููุชููู** \n {} \n\n**โโุงูุขู ููู ุจู ุงุฑุณูุงู ุงูุงููุฑ โถ** `.ุชุญููู ููููุฉ` **ุซู ูุนูุฑู ุงูุดุฎูุต ุฏุงุฎูู ุงูููุฑูุจ ุงู ุงููููุงุฉ . .**".format(input_str, vinfo))
    elif input_str == "ูุงุดู ุงูุงุจุงุญู" or input_str == "ูุดู ุงูุงุจุงุญู":
        variable = "DEEP_API"
        await asyncio.sleep(1.5)
        if gvarstatus("DEEP_API") is None:
            addgvar(variable, vinfo)
            await zed.edit("**โโุชู ุชุบูููุฑ ุชูููู {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงูุชูููู ุงูุฌูุฏููุฏ** \n {} \n\n**โโุงูุขู ููู ุจู ุงุฑุณูุงู ุงูุงููุฑ โถ** `.ููู ุงูุงุจุงุญู` **ูู ุชูุนููู ูุงุดูู ุงูุงุจุงุญู . .**".format(input_str, vinfo))
        else:
            addgvar(variable, vinfo)
            await zed.edit("**โโุชู ุฅุถุงููุฉ ุชูููู {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงูุชูููู ุงููุถูุงู** \n {} \n\n**โโุงูุขู ููู ุจู ุงุฑุณูุงู ุงูุงููุฑ โถ** `.ููู ุงูุงุจุงุญู` **ูู ุชูุนููู ูุงุดูู ุงูุงุจุงุญู . .**".format(input_str, vinfo))
    elif input_str == "ุงูููุฌู ุงูุงูุฏู" or input_str == "ุงูููุฌู ุงูุฏู" or input_str == "ุฑูุฒ ุงูุงูุฏู" or input_str == "ุฑูุฒ ุงูุฏู" or input_str == "ุงูุฑูุฒ ุงูุฏู":
        variable = "CUSTOM_ALIVE_EMOJI"
        await asyncio.sleep(1.5)
        if gvarstatus("CUSTOM_ALIVE_EMOJI") is None:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n\n**โโุงููุชุบููุฑ : โถ**\n `{}`\n**โโุงุฑุณูู ุงูุขู** `.ุงูุฏู`".format(input_str, vinfo))
        else:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n\n**โโุงููุชุบููุฑ : โถ**\n `{}`\n**โโุงุฑุณูู ุงูุขู** `.ุงูุฏู`".format(input_str, vinfo))
        addgvar("CUSTOM_ALIVE_EMOJI", vinfo)
    elif input_str == "ุนููุงู ุงูุงูุฏู" or input_str == "ุนููุงู ุงูุฏู":
        variable = "CUSTOM_ALIVE_TEXT"
        await asyncio.sleep(1.5)
        if gvarstatus("CUSTOM_ALIVE_TEXT") is None:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n\n**โโุงููุชุบููุฑ : โถ**\n `{}`\n**โโุงุฑุณูู ุงูุขู** `.ุงูุฏู`".format(input_str, vinfo))
        else:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n\n**โโุงููุชุบููุฑ : โถ**\n `{}`\n**โโุงุฑุณูู ุงูุขู** `.ุงูุฏู`".format(input_str, vinfo))
        addgvar("CUSTOM_ALIVE_TEXT", vinfo)
    elif input_str == "ุฎุท ุงูุงูุฏู" or input_str == "ุฎุท ุงูุฏู" or input_str == "ุฎุทูุท ุงูุงูุฏู" or input_str == "ุฎุท ุงูุฏู":
        variable = "CUSTOM_ALIVE_FONT"
        await asyncio.sleep(1.5)
        if gvarstatus("CUSTOM_ALIVE_FONT") is None:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n\n**โโุงููุชุบููุฑ : โถ**\n `{}`\n**โโุงุฑุณูู ุงูุขู** `.ุงูุฏู`".format(input_str, vinfo))
        else:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n\n**โโุงููุชุบููุฑ : โถ**\n `{}`\n**โโุงุฑุณูู ุงูุขู** `.ุงูุฏู`".format(input_str, vinfo))
        addgvar("CUSTOM_ALIVE_FONT", vinfo)
    elif input_str == "ุงุดุชุฑุงู ุงูุฎุงุต" or input_str == "ุงุดุชุฑุงู ุฎุงุต":
        variable = "Custom_Pm_Channel"
        await asyncio.sleep(1.5)
        if gvarstatus("Custom_Pm_Channel") is None:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n\n**โโุงููุชุบููุฑ : โถ**\n `{}`\n**โโุงุฑุณูู ุงูุขู** `.ุงุดุชุฑุงู ุฎุงุต`".format(input_str, vinfo))
        else:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n\n**โโุงููุชุบููุฑ : โถ**\n `{}`\n**โโุงุฑุณูู ุงูุขู** `.ุงุดุชุฑุงู ุฎุงุต`".format(input_str, vinfo))
        delgvar("Custom_Pm_Channel")
        addgvar("Custom_Pm_Channel", vinfo)
        if BOTLOG_CHATID:
                await event.client.send_message(
                BOTLOG_CHATID,
                f"#ูููุงุฉ_ุงูุงุดุชูุฑุงู_ุงูุงุฌุจูุงุฑู_ููุฎูุงุต\
                        \n**- ุงููููุงุฉ {input_str} ุชู ุงุถุงูุชููุง ูู ูุงุนุฏู ุงูุจูุงูุงุช ..ุจูุฌูุงุญ โ**",
            )
    elif input_str == "ุงุดุชุฑุงู ูุฑูุจ" or input_str == "ุงุดุชุฑุงู ุงููุฑูุจ":
        variable = "Custom_G_Channel"
        await asyncio.sleep(1.5)
        if gvarstatus("Custom_G_Channel") is None:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n\n**โโุงููุชุบููุฑ : โถ**\n `{}`\n**โโุงุฑุณูู ุงูุขู** `.ุงุดุชุฑุงู ูุฑูุจ`".format(input_str, vinfo))
        else:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n\n**โโุงููุชุบููุฑ : โถ**\n `{}`\n**โโุงุฑุณูู ุงูุขู** `.ุงุดุชุฑุงู ูุฑูุจ`".format(input_str, vinfo))
        delgvar("Custom_G_Channel")
        addgvar("Custom_G_Channel", vinfo)
        if BOTLOG_CHATID:
                await event.client.send_message(
                BOTLOG_CHATID,
                f"#ูููุงุฉ_ุงูุงุดุชูุฑุงู_ุงูุงุฌุจูุงุฑู_ููููุฑูุจ\
                        \n**- ุงููููุงุฉ {input_str} ุชู ุงุถุงูุชููุง ูู ูุงุนุฏู ุงูุจูุงูุงุช ..ุจูุฌูุงุญ โ**",
            )
    elif input_str == "ุฒุงุฌู" or input_str == "ูุงุฆูุฉ ุฒุงุฌู" or input_str == "ูุงุฆูู ุฒุงุฌู" or input_str == "ููุฒุฑุงุช":
        variable = "ZAGL_Rep"
        await asyncio.sleep(1.5)
        if gvarstatus("ZAGL_Rep") is None:
            addgvar(variable, vinfo)
            await zed.edit("**โโุชู ุฅุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงููููุฒุฑุงุช ุงููุถูุงูุฉ** \n {} \n\n**โโุงูุขู ููู ุจู ุงุฑุณูุงู ุงูุงููุฑ โถ** `.ุฒุงุฌู` **ุจุงููุฑุฏ ุน ููุต ุงู ููุฏููุง ุจููุต . .**".format(input_str, vinfo))
        else:
            addgvar(variable, vinfo)
            await zed.edit("**โโุชู ุฅุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงููููุฒุฑุงุช ุงููุถูุงูุฉ** \n {} \n\n**โโุงูุขู ููู ุจู ุงุฑุณูุงู ุงูุงููุฑ โถ** `.ุฒุงุฌู` **ุจุงููุฑุฏ ุน ููุต ุงู ููุฏููุง ุจููุต . .**".format(input_str, vinfo))
    elif input_str == "ุจูุช ุงูุชุฌููุน" or input_str == "ุจูุช ุงูููุงุท" or input_str == "ุงููุฌููุน" or input_str == "ุงูููุงุท":
        variable = "R_Point"
        await asyncio.sleep(1.5)
        if gvarstatus("R_Point") is None:
            addgvar(variable, vinfo)
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงูุจููุช ุงููุถูุงู** \n {} \n\n**โโุงูุขู ููู ุจู ุงุฑุณูุงู ุงูุงููุฑ โถ** `.ุชุฌููุน` **ูู ุงูุจูุฏุก ุจุชุฌูููุน ุงููููุงุท ูู ุงูุจููุช ุงูุฌูุฏููุฏ . .**".format(input_str, vinfo))
        else:
            addgvar(variable, vinfo)
            await zed.edit("**โโุชู ุงุถูุงูู {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงูุจููุช ุงููุถูุงู** \n {} \n\n**โโุงูุขู ููู ุจู ุงุฑุณูุงู ุงูุงููุฑ โถ** `.ุชุฌููุน` **ูู ุงูุจูุฏุก ุจุชุฌูููุน ุงููููุงุท ูู ุงูุจููุช ุงูุฌูุฏููุฏ . .**".format(input_str, vinfo))
    elif input_str == "ุงุณู ุงููุณุชุฎุฏู" or input_str == "ุงูุงุณู":
        if Config.HEROKU_API_KEY is None:
            return await ed(event, "โโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_API_KEY` ุฅุฐุง ููุช ูุงุชุนูู ุงูู ููุฌุฏ ููุท ุงุฐูุจ ุงูู ุญุณุงุจู ูู ููุฑููู ุซู ุงูู ุงูุงุนุฏุงุฏุงุช ุณุชุฌุฏู ุจุงูุงุณูู ุงูุณุฎู ูุฏุฎูู ูู ุงููุงุฑ. ")

        if Config.HEROKU_APP_NAME is not None:
            app = Heroku.app(Config.HEROKU_APP_NAME)
        else:
            return await ed(event, "โโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_APP_NAME` ุงุณู ุงูุชุทุจูู ุฅุฐุง ููุช ูุงุชุนูู.")
        heroku_var = app.config()
        variable = "ALIVE_NAME"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงููุชุบููุฑ : โถ**\n `{}` \n**โโูุชู ุงูุขู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุชูุจุซููููู ูุณุชุบูุฑู ุงูุฃูุฑ 2-1 ุฏููููุฉ โฌโญ ...**".format(input_str, vinfo))
        else:
            await zed.edit("**โโุชู ุฅุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โโุงููุถุงู ุฅููู :**\n `{}` \n**โโูุชู ุงูุขู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุชูุจุซููููู ูุณุชุบูุฑู ุงูุฃูุฑ 2-1 ุฏููููุฉ โฌโญ ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo

    elif input_str == "ุฑุณุงุฆู ุงูุญูุงูุฉ" or input_str == "ุฑุณุงุฆู ุงูุญูุงูู" or input_str == "ุฑุณุงุฆู ุงูุฎุงุต" or input_str == "ุฑุณุงุฆู ุญูุงูุฉ ุงูุฎุงุต" or input_str == "ุนุฏุฏ ุงูุชุญุฐูุฑุงุช":
        if Config.HEROKU_API_KEY is None:
            return await ed(event, "โพโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_API_KEY` ุฅุฐุง ููุช ูุงุชุนูู ุงูู ููุฌุฏ ููุท ุงุฐูุจ ุงูู ุญุณุงุจู ูู ููุฑููู ุซู ุงูู ุงูุงุนุฏุงุฏุงุช ุณุชุฌุฏู ุจุงูุงุณูู ุงูุณุฎู ูุฏุฎูู ูู ุงููุงุฑ. ")

        if Config.HEROKU_APP_NAME is not None:
            app = Heroku.app(Config.HEROKU_APP_NAME)
        else:
            return await ed(event, "โโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_APP_NAME` ุงุณู ุงูุชุทุจูู ุฅุฐุง ููุช ูุงุชุนูู.")
        heroku_var = app.config()
        variable = "MAX_FLOOD_IN_PMS"
        await asyncio.sleep(1.5)
        if vinfo.isdigit():
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงููุชุบููุฑ : โถ**\n `{}` \n**โโูุชู ุงูุขู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุชูุจุซููููู ูุณุชุบูุฑู ุงูุฃูุฑ 2-1 ุฏููููุฉ โฌโญ ...**".format(input_str, vinfo))
        else:
            return await zed.edit("**โโุฎุทูุฃ .. ูู ุจุงููุฑุฏ ุน ุฑููู ูููุท ุ!**")
        heroku_var[variable] = vinfo

    elif input_str == "ููุฏ ุชูุฑููุณ" or input_str == "ููุฏ ุงูุณูุดู" or input_str == "ููุฏ ุณูุดู":
        if Config.HEROKU_API_KEY is None:
            return await ed(event, "โโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_API_KEY` ุฅุฐุง ููุช ูุงุชุนูู ุงูู ููุฌุฏ ููุท ุงุฐูุจ ุงูู ุญุณุงุจู ูู ููุฑููู ุซู ุงูู ุงูุงุนุฏุงุฏุงุช ุณุชุฌุฏู ุจุงูุงุณูู ุงูุณุฎู ูุฏุฎูู ูู ุงููุงุฑ. ")

        if Config.HEROKU_APP_NAME is not None:
            app = Heroku.app(Config.HEROKU_APP_NAME)
        else:
            return await ed(event, "โโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_APP_NAME` ุงุณู ุงูุชุทุจูู ุฅุฐุง ููุช ูุงุชุนูู.")
        heroku_var = app.config()
        variable = "STRING_SESSION"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงููุชุบููุฑ : โถ**\n `{}` \n**โโูุชู ุงูุขู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุชูุจุซููููู ูุณุชุบูุฑู ุงูุฃูุฑ 2-1 ุฏููููุฉ โฌโญ ...**".format(input_str, vinfo))
        else:
            await zed.edit("**โโุชู ุฅุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โโุงููุถุงู ุฅููู :**\n `{}` \n**โโูุชู ุงูุขู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุชูุจุซููููู ูุณุชุบูุฑู ุงูุฃูุฑ 2-1 ุฏููููุฉ โฌโญ ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo

    elif input_str == "ูุฑูุจ ุงูุฑุณุงุฆู" or input_str == "ูุฑูุจ ุงูุชุฎุฒูู" or input_str == "ูุฑูุจ ุงูุฎุงุต":
        if Config.HEROKU_API_KEY is None:
            return await ed(event, "โโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_API_KEY` ุฅุฐุง ููุช ูุงุชุนูู ุงูู ููุฌุฏ ููุท ุงุฐูุจ ุงูู ุญุณุงุจู ูู ููุฑููู ุซู ุงูู ุงูุงุนุฏุงุฏุงุช ุณุชุฌุฏู ุจุงูุงุณูู ุงูุณุฎู ูุฏุฎูู ูู ุงููุงุฑ. ")

        if Config.HEROKU_APP_NAME is not None:
            app = Heroku.app(Config.HEROKU_APP_NAME)
        else:
            return await ed(event, "โโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_APP_NAME` ุงุณู ุงูุชุทุจูู ุฅุฐุง ููุช ูุงุชุนูู.")
        heroku_var = app.config()
        variable = "PM_LOGGER_GROUP_ID"
        await asyncio.sleep(1.5)
        if variable in heroku_var:
            await zed.edit("**โโุชู ุชุบูููุฑ {} ุจูุฌูุงุญ โ๏ธ**\n**โโุงููุชุบููุฑ : โถ**\n `{}` \n**โโูุชู ุงูุขู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุชูุจุซููููู ูุณุชุบูุฑู ุงูุฃูุฑ 2-1 ุฏููููุฉ โฌโญ ...**".format(input_str, vinfo))
        else:
            await zed.edit("**โโุชู ุฅุถุงููุฉ {} ุจูุฌูุงุญ โ๏ธ** \n**โโุงููุถุงู ุฅููู :**\n `{}` \n**โโูุชู ุงูุขู ุงุนูุงุฏุฉ ุชุดุบููู ุจููุช ุชูุจุซููููู ูุณุชุบูุฑู ุงูุฃูุฑ 2-1 ุฏููููุฉ โฌโญ ...**".format(input_str, vinfo))
        heroku_var[variable] = vinfo
    elif input_str == "ุงูุณุฌู" or input_str == "ูุฑูุจ ุงูุณุฌู":
        if Config.HEROKU_API_KEY is None:
            return await ed(event, "โโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง ุจุดูู ุทุจูุนู `HEROKU_API_KEY` ุฅุฐุง ููุช ูุงุชุนูู ุงูู ููุฌุฏ ููุท ุงุฐูุจ ุงูู ุญุณุงุจู ูู ููุฑููู ุซู ุงูู ุงูุงุนุฏุงุฏุงุช ุณุชุฌุฏู ุจุงูุงุณูู ุงูุณุฎู ูุฏุฎูู ูู ุงููุงุฑ. ")

        if Config.HEROKU_APP_NAME is not None:
            app = Heroku.app(Config.HEROKU_APP_NAME)
        else:
            return await ed(event, "โโุงุถุจุท Var ุงููุทููุจ ูู Heroku ุนูู ูุธููุฉ ูุฐุง 
